<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Global styles for Light Theme -->
    
    <!-- Style for Window background -->
    <Style x:Key="LightWindowStyle" TargetType="Window">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>

    <!-- Style for Button in Light Theme -->
    <Style TargetType="Button">
        <Setter Property="Background" Value="LightGray"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Hover effect -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FFFFF3D2"/>
                            
                            <Setter Property="BorderBrush" Value="#FFFF9D3A"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for ListviewItem -->
    <Style TargetType="ListViewItem">
        <Setter Property="Background" Value="White" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border x:Name="Bd" 
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="1"
                        SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Trigger for when the item is selected -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="#FFFFBB77" />
                            <Setter Property="Foreground" Value="Black" />
                            <Setter Property="BorderBrush" Value="#FFFF9D3A"/>
                        </Trigger>
                        <!-- Trigger for when the mouse is over the item -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="#FFFFF3D2" />
                            <Setter Property="BorderBrush" Value="#FFFFDEBD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--style for textbox-->
    <Style TargetType="TextBox">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" Value="#FFFF9D3A"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <!-- Custom CheckBox Template -->
    <Style TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <StackPanel Orientation="Horizontal">
                        <!-- The Border represents the CheckBox box -->
                        <Border x:Name="Border"
                                Width="15" Height="15"
                                BorderBrush="Gray"
                                BorderThickness="1"
                                Background="White">
                            <Grid>
                                <!-- Use Grid to center the CheckMark -->
                                <Path x:Name="CheckMark"
                                      Data="M 0 4 L 4 8 L 8 0"
                                      Stroke="Black"
                                      StrokeThickness="1"
                                      Visibility="Collapsed"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <!-- ContentPresenter is used to display the CheckBox's content -->
                        <ContentPresenter Margin="5,0,0,0" VerticalAlignment="Center"/>
                    </StackPanel>

                    <!-- Triggers for the states -->
                    <ControlTemplate.Triggers>
                        <!-- Trigger for when CheckBox is checked -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <!-- Trigger for when CheckBox is disabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>

                        <!-- Trigger for when the CheckBox is hovered (IsMouseOver) -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <!-- Change the BorderBrush to orange on hover -->
                            <Setter TargetName="Border" Property="BorderBrush" Value="Orange"/>
                            <Setter Property="Foreground" Value="Orange"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="CustomButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="#FFFFBB77"/>
        <Setter Property="BorderBrush" Value="#FFFF9D3A"/>
    </Style>
    
</ResourceDictionary>